@component-name = "portal-workflow"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Workflow";

	var workflowAssetType = "Web Content Article";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Web Content");

		Workflow.configureWCWorkflowViaFolderInfo(workflowDefinition = "Single Approver");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			WebContent.tearDownCP();

			Workflow.tearDownPortalWorkflow();

			Workflow.tearDownSiteWorkflow();
		}
	}

	@description = "LPS-135888 - Verify that the user with Account role type receives the notification for review"
	@ignore = "Test Stub"
	@priority = "4"
	test AccountUserReceivesNotification {

		// TODO LRQA-69117 AccountUserReceivesNotification pending implementation

	}

	@description = "Verify that the user can open new user details by notifications"
	@ignore = "Test Stub"
	@priority = "3"
	test CanOpenNewUserDetailsByNotifications {

		// TODO LRQA-70881 CanOpenNewUserDetailsByNotifications pending implementation

	}

	@description = "LPS-135888 - Verify that when the user delete the order, the notifications are not displayed"
	@ignore = "Test Stub"
	@priority = "4"
	test NotificationIsNotAvailableWhenOrderIsDeleted {

		// TODO LRQA-69118 NotificationIsNotAvailableWhenOrderIsDeleted pending implementation

	}

}