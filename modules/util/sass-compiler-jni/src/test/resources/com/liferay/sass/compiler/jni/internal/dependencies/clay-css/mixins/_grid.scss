@mixin clay-container-no-gutters {
	padding-left: 0;
	padding-right: 0;

	> .row {
		margin-left: 0;
		margin-right: 0;

		> .col,
		> [class*="col-"] {
			padding-right: 0;
			padding-left: 0;
		}
	}
}

// A general mixin used for component containers (e.g., `.container`, `.container-fluid`, `.form-group`, `.input-group-inset-item`)

@mixin clay-container($map) {
	$enabled: setter(map-get($map, enabled), true);
	$breakpoint-up: map-get($map, breakpoint-up);
	$breakpoint-down: setter(clay-breakpoint-prev($breakpoint-up), null);

	$align-items: map-get($map, align-items);
	$bg: map-get($map, bg);
	$bg-image: map-get($map, bg-image);
	$bg-position: map-get($map, bg-position);
	$bg-size: map-get($map, bg-size);
	$border-color: map-get($map, border-color);
	$border-radius: map-get($map, border-radius);
	$border-style: map-get($map, border-style);
	$border-width: map-get($map, border-width);
	$color: map-get($map, color);
	$display: map-get($map, display);
	$flex-basis: map-get($map, flex-basis);
	$flex-direction: map-get($map, flex-direction);
	$flex-grow: map-get($map, flex-grow);
	$flex-shrink: map-get($map, flex-shrink);
	$flex-wrap: map-get($map, flex-wrap);
	$float: map-get($map, float);
	$font-family: map-get($map, font-family);
	$font-size: map-get($map, font-size);
	$font-weight: map-get($map, font-weight);
	$height: map-get($map, height);
	$justify-content: map-get($map, justify-content);
	$line-height: map-get($map, line-height);
	$margin-bottom: map-get($map, margin-bottom);
	$margin-left: map-get($map, margin-left);
	$margin-right: map-get($map, margin-right);
	$margin-top: map-get($map, margin-top);
	$max-height: map-get($map, max-height);
	$max-width: map-get($map, max-width);
	$min-height: map-get($map, min-height);
	$min-width: map-get($map, min-width);
	$opacity: map-get($map, opacity);
	$order: map-get($map, order);
	$padding-bottom: map-get($map, padding-bottom);
	$padding-left: map-get($map, padding-left);
	$padding-right: map-get($map, padding-right);
	$padding-top: map-get($map, padding-top);
	$position: map-get($map, position);
	$text-align: map-get($map, text-align);
	$text-decoration: map-get($map, text-decoration);
	$text-transform: map-get($map, text-transform);
	$transition: map-get($map, transition);
	$vertical-align: map-get($map, vertical-align);
	$width: map-get($map, width);

	$padding-bottom-mobile: map-get($map, padding-bottom-mobile);
	$padding-left-mobile: map-get($map, padding-left-mobile);
	$padding-right-mobile: map-get($map, padding-right-mobile);
	$padding-top-mobile: map-get($map, padding-top-mobile);

	align-items: $align-items;
	background-color: $bg;
	background-image: $bg-image;
	background-position: $bg-position;
	background-size: $bg-size;
	border-color: $border-color;
	border-radius: $border-radius;
	border-style: $border-style;
	border-width: $border-width;
	color: $color;
	display: $display;
	font-family: $font-family;
	font-size: $font-size;
	font-weight: $font-weight;
	flex-basis: $flex-basis;
	flex-direction: $flex-direction;
	flex-grow: $flex-grow;
	flex-shrink: $flex-shrink;
	flex-wrap: $flex-wrap;
	float: $float;
	justify-content: $justify-content;
	height: $height;
	line-height: $line-height;
	margin-bottom: $margin-bottom;
	margin-left: $margin-left;
	margin-right: $margin-right;
	margin-top: $margin-top;
	max-height: $max-height;
	max-width: $max-width;
	min-height: $min-height;
	min-width: $min-width;
	opacity: $opacity;
	order: $order;
	padding-bottom: $padding-bottom;
	padding-left: $padding-left;
	padding-right: $padding-right;
	padding-top: $padding-top;
	position: $position;
	text-align: $text-align;
	text-decoration: $text-decoration;
	text-transform: $text-transform;
	transition: $transition;
	vertical-align: $vertical-align;
	width: $width;

	@if($breakpoint-down) {
		@include media-breakpoint-down($breakpoint-down) {
			padding-bottom: $padding-bottom-mobile;
			padding-left: $padding-left-mobile;
			padding-right: $padding-right-mobile;
			padding-top: $padding-top-mobile;
		}
	}
}

@mixin clay-row($map) {
	$display: map-get($map, display);
	$flex-wrap: map-get($map, flex-wrap);
	$justify-content: map-get($map, justify-content);
	$margin-bottom: map-get($map, margin-bottom);
	$margin-left: map-get($map, margin-left);
	$margin-right: map-get($map, margin-right);
	$margin-top: map-get($map, margin-top);

	display: $display;
	flex-wrap: $flex-wrap;
	justify-content: $justify-content;
	margin-bottom: $margin-bottom;
	margin-left: $margin-left;
	margin-right: $margin-right;
	margin-top: $margin-top;
}

@mixin clay-custom-grid-columns($map) {
	$custom-grid-props: map-merge((
		enabled: $enable-grid-classes
	), $map);

	$enabled: map-get($custom-grid-props, enabled);

	@if ($custom-grid-props and $enabled) {
		display: block;
		flex-basis: map-get(map-get($custom-grid-props, base), flex-basis);
		flex-grow: 1;
		max-width: map-get(map-get($custom-grid-props, base), max-width);
		min-width: map-get(map-get($custom-grid-props, base), min-width);
		padding-left: map-get(map-get($custom-grid-props, base), padding-left);
		padding-right: map-get(map-get($custom-grid-props, base), padding-right);
		position: relative;
		width: 100%;

		@each $breakpoint in map-keys($custom-grid-props) {
			$next: breakpoint-next($breakpoint, $custom-grid-props);

			@if ($next) {
				@media (min-width: map-get(map-get($custom-grid-props, $next), breakpoint)) {
					flex-basis: map-get(map-get($custom-grid-props, $next), flex-basis);
					max-width: map-get(map-get($custom-grid-props, $next), max-width);
					min-width: map-get(map-get($custom-grid-props, $next), min-width);
					padding-left: map-get(map-get($custom-grid-props, $next), padding-left);
					padding-right: map-get(map-get($custom-grid-props, $next), padding-right);
				}
			}
		}
	}
}